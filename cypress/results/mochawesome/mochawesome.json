{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-08T14:51:10.003Z",
    "end": "2024-12-08T14:51:32.810Z",
    "duration": 22807,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c3a58fdd-8edc-4751-b83b-217b5f4674e2",
      "title": "",
      "fullFile": "cypress/e2e/firstTest.spec.js",
      "file": "cypress/e2e/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df9e6f13-3c83-4495-957c-1720500a65ac",
          "title": "Test API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify request for creating new article",
              "fullTitle": "Test API Verify request for creating new article",
              "timedOut": null,
              "duration": 12845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', Cypress.env(\"apiUrl\") + '/api/articles/').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type(\"Liza's article\");\ncy.get('[formcontrolname=\"description\"]').type('This is description of my article');\ncy.get('[formcontrolname=\"body\"]').type('Test test test test test');\ncy.get('[placeholder=\"Enter tags\"]').type('test');\ncy.get('[type=\"button\"]').click();\ncy.wait('@postArticles').then(xhr => {\n  cy.log(xhr);\n  expect(xhr.response.statusCode).to.be.equal(201);\n  expect(xhr.request.body.article.body).to.be.equal('Test test test test test');\n  expect(xhr.request.body.article.title).to.be.equal(\"Liza's article\");\n  expect(xhr.request.body.article.description).to.be.equal(\"This is description of my article\");\n  expect(xhr.response.body.article.body).to.be.equal('Test test test test test');\n  expect(xhr.response.body.article.title).to.be.equal(\"Liza's article\");\n  expect(xhr.response.body.article.description).to.be.equal(\"This is description of my article\");\n});\ncy.get('.article-actions button.btn-outline-danger').click();",
              "err": {},
              "uuid": "7806b784-a18e-477e-a4b2-f767f580479f",
              "parentUUID": "df9e6f13-3c83-4495-957c-1720500a65ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify request for creating new article with changing request and response",
              "fullTitle": "Test API Verify request for creating new article with changing request and response",
              "timedOut": null,
              "duration": 9857,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', Cypress.env(\"apiUrl\") + '/api/articles/', req => {\n  req.body.article.description = \"This is description 2\";\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type(\"Liza's article\");\ncy.get('[formcontrolname=\"description\"]').type('This is description of my article');\ncy.get('[formcontrolname=\"body\"]').type('Test test test test test');\ncy.get('[placeholder=\"Enter tags\"]').type('test');\ncy.get('[type=\"button\"]').click();\ncy.wait('@postArticles').then(xhr => {\n  cy.log(xhr);\n  expect(xhr.response.statusCode).to.be.equal(201);\n  expect(xhr.request.body.article.body).to.be.equal('Test test test test test');\n  expect(xhr.request.body.article.title).to.be.equal(\"Liza's article\");\n  expect(xhr.request.body.article.description).to.be.equal(\"This is description 2\");\n  expect(xhr.response.body.article.body).to.be.equal('Test test test test test');\n  expect(xhr.response.body.article.title).to.be.equal(\"Liza's article\");\n  expect(xhr.response.body.article.description).to.be.equal(\"This is description 2\");\n});\ncy.get('.article-actions button.btn-outline-danger').click();",
              "err": {},
              "uuid": "d085116d-e90f-4d74-ba83-9ec25bd059ae",
              "parentUUID": "df9e6f13-3c83-4495-957c-1720500a65ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7806b784-a18e-477e-a4b2-f767f580479f",
            "d085116d-e90f-4d74-ba83-9ec25bd059ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22702,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "configFile": "reporter-config.json",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}